{"version":3,"file":"static/js/713.136f67ca.chunk.js","mappings":"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","sources":["webpack://foodwagon_project/./src/components/pages/Login/authRegForm.module.scss?8e07","components/pages/Login/AuthRegForm.js","components/pages/Login/Login.js","utils/utilsForForm/fieldValidationSchemes.js","utils/utilsForForm/regExpPassword.js","utils/utilsForForm/regExpEmail.js.js","webpack://foodwagon_project/./src/components/pages/Login/login.module.scss?ef79"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"regForm\":\"authRegForm_regForm__TeeiW\",\"regForm__link\":\"authRegForm_regForm__link__CgXaM\",\"regForm__linkTo\":\"authRegForm_regForm__linkTo__zGZLX\",\"regForm__title\":\"authRegForm_regForm__title__aaRGI\",\"regForm__input\":\"authRegForm_regForm__input__MNGV9\",\"regForm__label\":\"authRegForm_regForm__label__QiXwe\",\"regForm__button\":\"authRegForm_regForm__button__Ozrqa\",\"regForm__error\":\"authRegForm_regForm__error__sC3w4\",\"regForm__isValid\":\"authRegForm_regForm__isValid__vUX60\"};","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport cn from 'classnames';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport style from './authRegForm.module.scss';\r\n\r\nfunction AuthRegForm({ errorMessage, handleClick, schema, title }) {\r\n  const {\r\n    control,\r\n    formState: { errors, isValid },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = ({ email, password }) => {\r\n    handleClick(email, password);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={style.regForm} onSubmit={handleSubmit(onSubmit)}>\r\n      <p className={style.regForm__title}>{title}</p>\r\n      <p className={style.regForm__link}>\r\n        Or{' '}\r\n        <Link className={style.regForm__linkTo} to={title === 'Log in' ? '/register' : '/login'}>\r\n          {title === 'Log in' ? 'Sign up' : 'Log in'}\r\n        </Link>\r\n      </p>\r\n      <label className={style.regForm__label} htmlFor=\"email\">\r\n        Email address{' '}\r\n      </label>\r\n      <Controller\r\n        render={({ field }) => (\r\n          <input\r\n            className={style.regForm__input}\r\n            id=\"email\"\r\n            {...field}\r\n            aria-invalid={errors.email ? 'true' : 'false'}\r\n          />\r\n        )}\r\n        control={control}\r\n        name=\"email\"\r\n      />\r\n\r\n      <p className={style.regForm__error} role=\"alert\">\r\n        {errors.email?.message}{' '}\r\n      </p>\r\n\r\n      <label className={style.regForm__label} htmlFor=\"password\">\r\n        Password\r\n      </label>\r\n      <Controller\r\n        render={({ field }) => (\r\n          <input\r\n            className={style.regForm__input}\r\n            id=\"password\"\r\n            {...field}\r\n            aria-invalid={errors.password ? 'true' : 'false'}\r\n          />\r\n        )}\r\n        control={control}\r\n        name=\"password\"\r\n      />\r\n\r\n      <p className={style.regForm__error} role=\"alert\">\r\n        {errors.password?.message}\r\n      </p>\r\n      <input\r\n        className={cn(style.regForm__button, {\r\n          [style.regForm__isValid]: isValid,\r\n        })}\r\n        disabled={!isValid}\r\n        type=\"submit\"\r\n        value={title}\r\n      />\r\n\r\n      <p className={style.regForm__error} role=\"alert\">\r\n        {errorMessage && errorMessage}\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\nexport default AuthRegForm;\r\n","import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { Suspense, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nimport { setUser } from '../../../store/reducers/user';\r\nimport { loginSchema } from '../../../utils/utilsForForm/fieldValidationSchemes';\r\nimport Spinner from '../../App/Spinner';\r\nimport AuthRegForm from './AuthRegForm';\r\nimport style from './login.module.scss';\r\n\r\nfunction Login() {\r\n  const auth = getAuth();\r\n  const { pathname } = useLocation();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleLogin = (email, password) => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(({ user }) => {\r\n        dispatch(\r\n          setUser({\r\n            email: user.email,\r\n            id: user.uid,\r\n            token: user.accessToken,\r\n          }),\r\n        );\r\n        navigate('/');\r\n      })\r\n      .catch(({ code, message }) => {\r\n        switch (code) {\r\n          case 'auth/invalid-login-credentials':\r\n            setErrorMessage('Invalid login details');\r\n            break;\r\n\r\n          default:\r\n            setErrorMessage(message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <div className={style.login}>\r\n      <Suspense fallback={<Spinner />}>\r\n        <AuthRegForm errorMessage={errorMessage} handleClick={handleLogin} schema={loginSchema} title={'Log in'} />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import * as yup from 'yup';\r\n\r\nimport { regExpEmail } from './regExpEmail.js';\r\nimport { regExpPassword } from './regExpPassword.js';\r\n\r\nexport const signupSchema = yup\r\n  .object({\r\n    email: yup\r\n      .string()\r\n      .matches(regExpEmail, {\r\n        excludeEmptyString: true,\r\n        message: 'email must be in a valid format',\r\n      })\r\n      .required(),\r\n    password: yup\r\n      .string()\r\n      .matches(regExpPassword, {\r\n        excludeEmptyString: true,\r\n        message: 'password should consist of letters, numbers, and symbols',\r\n      })\r\n      .required()\r\n      .min(8),\r\n  })\r\n  .required();\r\n\r\nexport const loginSchema = yup\r\n  .object({\r\n    email: yup\r\n      .string()\r\n      .matches(regExpEmail, {\r\n        excludeEmptyString: true,\r\n        message: 'email must be in a valid format',\r\n      })\r\n      .required(),\r\n    password: yup.string().required(),\r\n  })\r\n  .required();\r\n","export const regExpPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^\\w\\s])/g;\r\n","export const regExpEmail =\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"login_login__tNpxT\"};"],"names":["errorMessage","handleClick","schema","title","useForm","defaultValues","email","password","mode","resolver","yupResolver","control","formState","errors","isValid","handleSubmit","reset","className","style","onSubmit","to","htmlFor","render","field","id","name","role","message","cn","disabled","type","value","auth","getAuth","pathname","useLocation","dispatch","useDispatch","navigate","useNavigate","useState","setErrorMessage","useEffect","window","scrollTo","Suspense","fallback","signInWithEmailAndPassword","then","user","setUser","uid","token","accessToken","catch","code","loginSchema","signupSchema","yup","matches","regExpEmail","excludeEmptyString","required","min"],"sourceRoot":""}