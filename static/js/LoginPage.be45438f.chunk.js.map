{"version":3,"file":"static/js/LoginPage.be45438f.chunk.js","mappings":"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","sources":["webpack://foodwagon-online-shop/./src/components/pages/LoginPage/authRegForm.module.scss?23ee","components/pages/LoginPage/AuthRegForm.tsx","webpack://foodwagon-online-shop/./src/components/pages/LoginPage/loginPage.module.scss?866f","components/pages/LoginPage/LoginPage.tsx","utils/regExpPassword.ts","utils/fieldValidationSchemes.ts","utils/regExpEmail.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"regForm\":\"authRegForm_regForm__ivbJx\",\"regForm__link\":\"authRegForm_regForm__link__ErnFP\",\"regForm__linkTo\":\"authRegForm_regForm__linkTo__rygF4\",\"regForm__title\":\"authRegForm_regForm__title__iM60G\",\"regForm__input\":\"authRegForm_regForm__input__adLiZ\",\"regForm__label\":\"authRegForm_regForm__label__nBYhm\",\"regForm__button\":\"authRegForm_regForm__button__ZTTEw\",\"regForm__error\":\"authRegForm_regForm__error__HN6UC\",\"regForm__isValid\":\"authRegForm_regForm__isValid__JPKo1\",\"formWrapper\":\"authRegForm_formWrapper__6yK20\"};","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport cn from 'classnames';\r\nimport { FC } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\n\r\nimport style from './authRegForm.module.scss';\r\n\r\ntype Data = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\ntype AuthRegFormProps = {\r\n  errorMessage: string;\r\n  handleClick: (email: string, password: string) => void;\r\n  schema: yup.ObjectSchema<Data>;\r\n  title: string;\r\n};\r\n\r\nconst AuthRegForm: FC<AuthRegFormProps> = ({ errorMessage, handleClick, schema, title }) => {\r\n  const {\r\n    control,\r\n    formState: { errors, isValid },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = ({ email, password }: Data) => {\r\n    handleClick(email, password);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className={style.formWrapper}>\r\n      <form className={style.regForm} onSubmit={handleSubmit(onSubmit)}>\r\n        <p className={style.regForm__title}>{title}</p>\r\n\r\n        <p className={style.regForm__link}>\r\n          Or{' '}\r\n          <Link className={style.regForm__linkTo} to={title === 'Log in' ? '/register' : '/login'}>\r\n            {title === 'Log in' ? 'Sign up' : 'Log in'}\r\n          </Link>\r\n        </p>\r\n\r\n        <label className={style.regForm__label} htmlFor=\"email\">\r\n          Email address{' '}\r\n        </label>\r\n\r\n        <Controller\r\n          render={({ field }) => (\r\n            <input\r\n              className={style.regForm__input}\r\n              id=\"email\"\r\n              type=\"email\"\r\n              {...field}\r\n              aria-invalid={errors.email ? 'true' : 'false'}\r\n            />\r\n          )}\r\n          control={control}\r\n          name=\"email\"\r\n        />\r\n\r\n        <div className={style.regForm__error} role=\"alert\">\r\n          {errors.email?.message}{' '}\r\n        </div>\r\n\r\n        <label className={style.regForm__label} htmlFor=\"password\">\r\n          Password\r\n        </label>\r\n\r\n        <Controller\r\n          render={({ field }) => (\r\n            <input\r\n              className={style.regForm__input}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              {...field}\r\n              aria-invalid={errors.password ? 'true' : 'false'}\r\n            />\r\n          )}\r\n          control={control}\r\n          name=\"password\"\r\n        />\r\n\r\n        <div className={style.regForm__error} role=\"alert\">\r\n          {errors.password?.message}\r\n        </div>\r\n\r\n        <input\r\n          className={cn(style.regForm__button, {\r\n            [style.regForm__isValid]: isValid,\r\n          })}\r\n          disabled={!isValid}\r\n          type=\"submit\"\r\n          value={title}\r\n        />\r\n\r\n        <div className={style.regForm__error} role=\"alert\">\r\n          {errorMessage && errorMessage}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default AuthRegForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"loginPage_login__tOXs5\"};","import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { FC, Suspense, useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nimport { useAppDispatch } from '../../../store';\r\nimport { setUser } from '../../../store/slices/user/slice';\r\nimport { loginSchema } from '../../../utils/fieldValidationSchemes';\r\nimport Spinner from '../../ui/Spinner/Spinner';\r\nimport AuthRegForm from './AuthRegForm';\r\nimport style from './loginPage.module.scss';\r\n\r\nexport const Login: FC = () => {\r\n  const auth = getAuth();\r\n  const { pathname } = useLocation();\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleLogin = (email: string, password: string) => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(({ user }) => {\r\n        dispatch(\r\n          setUser({\r\n            email: user.email,\r\n            id: user.uid,\r\n          }),\r\n        );\r\n        navigate('/');\r\n      })\r\n      .catch(({ code, message }) => {\r\n        switch (code) {\r\n          case 'auth/invalid-login-credentials':\r\n            setErrorMessage('Invalid login details');\r\n            break;\r\n\r\n          default:\r\n            setErrorMessage(message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <div className={style.login}>\r\n      <Suspense fallback={<Spinner />}>\r\n        <AuthRegForm errorMessage={errorMessage} handleClick={handleLogin} schema={loginSchema} title={'Log in'} />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n","export const regExpPassword:RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^\\w\\s])/g;\r\n","import * as yup from 'yup';\r\n\r\nimport { regExpEmail } from './regExpEmail';\r\nimport { regExpPassword } from './regExpPassword';\r\n\r\nexport const signupSchema = yup\r\n  .object({\r\n    email: yup\r\n      .string()\r\n      .matches(regExpEmail, {\r\n        excludeEmptyString: true,\r\n        message: 'email must be in a valid format',\r\n      })\r\n      .required(),\r\n    password: yup\r\n      .string()\r\n      .matches(regExpPassword, {\r\n        excludeEmptyString: true,\r\n        message: 'password should consist of letters, numbers, and symbols',\r\n      })\r\n      .required()\r\n      .min(8),\r\n  })\r\n  .required();\r\n\r\nexport const loginSchema = yup\r\n  .object({\r\n    email: yup\r\n      .string()\r\n      .matches(regExpEmail, {\r\n        excludeEmptyString: true,\r\n        message: 'email must be in a valid format',\r\n      })\r\n      .required(),\r\n    password: yup.string().required(),\r\n  })\r\n  .required();\r\n","/* eslint-disable max-len */\r\nexport const regExpEmail: RegExp =\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n"],"names":["_ref","_errors$email","_errors$password","errorMessage","handleClick","schema","title","control","formState","errors","isValid","handleSubmit","reset","useForm","defaultValues","email","password","mode","resolver","yupResolver","_jsx","className","style","children","_jsxs","onSubmit","_ref2","Link","to","htmlFor","Controller","render","_ref3","field","id","type","name","role","message","_ref4","cn","disabled","value","Login","auth","getAuth","pathname","useLocation","dispatch","useAppDispatch","navigate","useNavigate","setErrorMessage","useState","useEffect","window","scrollTo","Suspense","fallback","Spinner","AuthRegForm","handleLogin","signInWithEmailAndPassword","then","user","setUser","uid","catch","code","loginSchema","signupSchema","yup","matches","regExpEmail","excludeEmptyString","required","min"],"sourceRoot":""}